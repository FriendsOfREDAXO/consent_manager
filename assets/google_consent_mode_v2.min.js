function debugLog(message,data){if(window.consentManagerDebugConfig && window.consentManagerDebugConfig.debug_enabled){if(data !== undefined){console.log('Google Consent Mode: ' + message,data);}else{console.log('Google Consent Mode: ' + message);}}}if(window.consentManagerDebugConfig && window.consentManagerDebugConfig.debug_enabled){console.log('Google Consent Mode v2: Script loaded');}window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}let GOOGLE_CONSENT_V2_DEFAULTS ={'ad_storage': 'denied','ad_user_data': 'denied','ad_personalization': 'denied','analytics_storage': 'denied','personalization_storage': 'denied','functionality_storage': 'denied','security_storage': 'denied'};let GOOGLE_CONSENT_V2_STORAGE_KEY = 'consentMode';let GOOGLE_CONSENT_V2_FIELDS = [ 'ad_storage','ad_user_data','ad_personalization','analytics_storage','personalization_storage','functionality_storage','security_storage',];let GOOGLE_CONSENT_V2_FIELDS_EVENTS ={'analytics_storage':{'on_granted': function(){console.log('Analytics storage consent granted');},'on_denied': function(){console.log('Analytics storage consent denied');}}};function array_combine(keys,values){const newArray ={};let i = 0;if(typeof keys !== 'object' || typeof values !== 'object' || typeof keys.length !== 'number' || typeof values.length !== 'number' || !keys.length || !values.length || keys.length !== values.length){return false;}for(i = 0;i < keys.length;i++){newArray[keys[i]] = values[i];}return newArray;}function array_fill(startIndex,num,mixedVal){let key;const tmpArr = [];if(!isNaN(startIndex)&& !isNaN(num)){for(key = 0;key < num;key++){tmpArr[(key + startIndex)] = mixedVal;}}return tmpArr;}let consentStorage = localStorage.getItem(GOOGLE_CONSENT_V2_STORAGE_KEY);if(consentStorage === null){let defaultSettings = GOOGLE_CONSENT_V2_DEFAULTS;gtag('consent','default',defaultSettings);localStorage.setItem(GOOGLE_CONSENT_V2_STORAGE_KEY,JSON.stringify(defaultSettings));}else{let storedSettings = JSON.parse(consentStorage);let needsUpdate = false;for(const [field,defaultValue] of Object.entries(GOOGLE_CONSENT_V2_DEFAULTS)){if(typeof storedSettings[field] === "undefined"){storedSettings[field] = defaultValue;needsUpdate = true;}}if(needsUpdate){gtag('consent','default',storedSettings);localStorage.setItem(GOOGLE_CONSENT_V2_STORAGE_KEY,JSON.stringify(storedSettings));}else{gtag('consent','default',storedSettings);}}if(localStorage.getItem('userId')!= null){window.dataLayer.push({'user_id': localStorage.getItem('userId')});}function setConsent(consent){let consentStorage = localStorage.getItem(GOOGLE_CONSENT_V2_STORAGE_KEY);let consentSettings;if(consentStorage === null){consentSettings ={...GOOGLE_CONSENT_V2_DEFAULTS};debugLog('Initializing with defaults',consentSettings);}else{consentSettings = JSON.parse(consentStorage);debugLog('Loaded existing settings',consentSettings);}debugLog('Updating with consent',consent);for(const [key,value] of Object.entries(consentSettings)){if(typeof consent[key] !== "undefined"){if(typeof(GOOGLE_CONSENT_V2_FIELDS_EVENTS[key])!= 'undefined'){if(consent[key] === true && consentSettings[key] === 'denied'){GOOGLE_CONSENT_V2_FIELDS_EVENTS[key]['on_granted']();}else if(consent[key] === false && consentSettings[key] === 'granted'){GOOGLE_CONSENT_V2_FIELDS_EVENTS[key]['on_denied']();}}consentSettings[key] =(consent[key] === true ? 'granted' : 'denied');}}debugLog('Final settings',consentSettings);gtag('consent','update',consentSettings);localStorage.setItem(GOOGLE_CONSENT_V2_STORAGE_KEY,JSON.stringify(consentSettings));}window.GoogleConsentModeV2 ={setConsent: setConsent,fields: GOOGLE_CONSENT_V2_FIELDS,events: GOOGLE_CONSENT_V2_FIELDS_EVENTS};window.setConsent = setConsent;if(window.consentManagerDebugConfig && window.consentManagerDebugConfig.debug_enabled){console.log('Google Consent Mode v2 initialized');}