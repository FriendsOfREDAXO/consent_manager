const cmCookieExpires = 365, cmCookieAPI = Cookies.withAttributes({ expires: 365, path: "/", domain: consent_manager_parameters.domain, sameSite: "Strict", secure: !1 }); (function () { 'use strict'; function a(a) { if (i = [], h = { consents: [], version: j, consentid: consent_manager_parameters.consentid, cachelogid: consent_manager_parameters.cachelogid }, "none" === a ? f.querySelectorAll("[data-cookie-uids]").forEach(function (a) { var b = JSON.parse(a.getAttribute("data-cookie-uids")); a.disabled ? b.forEach(function (a) { i.push(a), c(f.querySelector("[data-uid=\"script-" + a + "\"]")) }) : (a.checked = !1, b.forEach(function (a) { d(f.querySelector("[data-uid=\"script-" + a + "\"]")) })) }) : f.querySelectorAll("[data-cookie-uids]").forEach(function (b) { var e = JSON.parse(b.getAttribute("data-cookie-uids")); b.checked || "all" === a ? e.forEach(function (a) { i.push(a), c(f.querySelector("[data-uid=\"script-" + a + "\"]")) }) : e.forEach(function (a) { d(f.querySelector("[data-uid=\"script-" + a + "\"]")) }) }), h.consents = i, cmCookieAPI.set("consent_manager", JSON.stringify(h)), "undefined" == typeof cmCookieAPI.get("consent_manager")) consent_manager_parameters.no_cookie_set = !0, console.warn("Addon consent_manager: Es konnte kein Cookie f\xFCr die Domain " + consent_manager_parameters.domain + " gesetzt werden!"); else { var b = new XMLHttpRequest, e = consent_manager_parameters.fe_controller + "?rex-api-call=consent_manager&buster=" + new Date().getTime(), g = "domain=" + consent_manager_parameters.domain + "&consentid=" + consent_manager_parameters.consentid + "&buster=" + new Date().getTime(); b.onerror = () => { console.error("Addon consent_manager: Fehler beim speichern des Consent! " + b.statusText) }, b.open("POST", e, !1), b.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), b.setRequestHeader("Cache-Control", "no-cache, no-store, max-age=0"), b.setRequestHeader("Expires", "Thu, 1 Jan 1970 00:00:00 GMT"), b.setRequestHeader("Pragma", "no-cache"), b.send(g) } document.querySelectorAll(".consent_manager-show-box-reload").length || 1 === consent_manager_parameters.forcereload ? location.reload() : document.dispatchEvent(new CustomEvent("consent_manager-saved", { detail: JSON.stringify(i) })) } function b() { var a = consent_manager_parameters.domain; for (var b in cmCookieAPI.get()) cmCookieAPI.remove(encodeURIComponent(b)), cmCookieAPI.remove(encodeURIComponent(b), { domain: a }), cmCookieAPI.remove(encodeURIComponent(b), { path: "/" }), cmCookieAPI.remove(encodeURIComponent(b), { domain: a, path: "/" }), cmCookieAPI.remove(encodeURIComponent(b), { domain: "." + a }), cmCookieAPI.remove(encodeURIComponent(b), { domain: "." + a, path: "/" }), Cookies.remove(encodeURIComponent(b), { domain: window.location.hostname }), Cookies.remove(encodeURIComponent(b), { path: "/" }), Cookies.remove(encodeURIComponent(b), { domain: window.location.hostname, path: "/" }) } function c(a) { var b; if (a && !a.children.length) { b = new DOMParser().parseFromString(window.atob(a.getAttribute("data-script")), "text/html"); for (var c, d = 0; d < b.scripts.length; d++)c = document.createElement("script"), b.scripts[d].src ? c.src = b.scripts[d].src : c.innerHTML = b.scripts[d].innerHTML, a.appendChild(c) } } function d(a) { a && (a.innerHTML = "") } function e() { f.querySelectorAll("[data-cookie-uids]").forEach(function (a) { var b = !0, c = JSON.parse(a.getAttribute("data-cookie-uids")); c.forEach(function (a) { -1 === i.indexOf(a) && (b = !1) }), b && (a.checked = !0) }), consent_manager_parameters.hidebodyscrollbar && (document.querySelector("body").style.overflow = "hidden"), document.getElementById("consent_manager-background").classList.remove("consent_manager-hidden"); var a = f.querySelectorAll("input[type=\"checkbox\"]"), b = a[0]; f.focus(), b && b.focus() } var f, g = 0, h = {}, i = [], j = -1, k = -1, l = -1, m = -1; return consent_manager_parameters.no_cookie_set = !1, "undefined" == typeof cmCookieAPI.get("consent_manager") ? (cmCookieAPI.set("consent_manager_test", "test"), "undefined" == typeof cmCookieAPI.get("consent_manager_test") ? (g = 0, consent_manager_parameters.no_cookie_set = !0, console.warn("Addon consent_manager: Es konnte kein Cookie f\xFCr die Domain " + consent_manager_parameters.domain + " gesetzt werden!")) : (cmCookieAPI.remove("consent_manager_test"), g = 1)) : (h = JSON.parse(cmCookieAPI.get("consent_manager")), h.hasOwnProperty("version") && (i = h.consents, l = parseInt(h.version), m = parseInt(h.cachelogid))), "" === consent_manager_box_template ? void console.warn("Addon consent_manager: Keine Cookie-Gruppen / Cookies ausgew\xE4hlt bzw. keine Domain zugewiesen! (" + location.hostname + ")") : void (f = new DOMParser().parseFromString(consent_manager_box_template, "text/html"), f = f.getElementById("consent_manager-background"), document.querySelectorAll("body")[0].appendChild(f), j = parseInt(consent_manager_parameters.version), k = parseInt(consent_manager_parameters.cachelogid), (j !== l || k !== m) && (g = 1, i = [], b()), i.forEach(function (a) { c(f.querySelector("[data-uid=\"script-" + a + "\"]")) }), (consent_manager_parameters.initially_hidden || consent_manager_parameters.no_cookie_set) && (g = 0), g && e(), f.querySelectorAll(".consent_manager-close").forEach(function (c) { c.addEventListener("click", function () { return c.classList.contains("consent_manager-save-selection") ? (b(), a("selection")) : c.classList.contains("consent_manager-accept-all") ? (b(), a("all")) : c.classList.contains("consent_manager-accept-none") ? (b(), a("none")) : c.classList.contains("consent_manager-close") && !document.getElementById("consent_manager-detail").classList.contains("consent_manager-hidden") && document.getElementById("consent_manager-detail").classList.toggle("consent_manager-hidden"), consent_manager_parameters.hidebodyscrollbar && (document.querySelector("body").style.overflow = "auto"), document.getElementById("consent_manager-background").classList.add("consent_manager-hidden"), !1 }) }), document.getElementById("consent_manager-toggle-details") && document.getElementById("consent_manager-toggle-details").addEventListener("click", function () { return document.getElementById("consent_manager-detail").classList.toggle("consent_manager-hidden"), !1 }), document.getElementById("consent_manager-toggle-details") && document.getElementById("consent_manager-toggle-details").addEventListener("keydown", function (a) { if ("Enter" == a.key) return document.getElementById("consent_manager-detail").classList.toggle("consent_manager-hidden"), !1 }), document.querySelectorAll(".consent_manager-show-box, .consent_manager-show-box-reload").forEach(function (a) { a.addEventListener("click", function () { return e(), !1 }) })) })(); function consent_manager_showBox() { var a = []; "undefined" != typeof cmCookieAPI.get("consent_manager") && (cookieData = JSON.parse(cmCookieAPI.get("consent_manager")), cookieData.hasOwnProperty("version") && (a = cookieData.consents)), consent_managerBox = document.getElementById("consent_manager-background"), consent_managerBox.querySelectorAll("[data-cookie-uids]").forEach(function (b) { var c = !0, d = JSON.parse(b.getAttribute("data-cookie-uids")); d.forEach(function (b) { -1 === a.indexOf(b) && (c = !1) }), c && (b.checked = !0) }), consent_manager_parameters.hidebodyscrollbar && (document.querySelector("body").style.overflow = "hidden"), document.getElementById("consent_manager-background").classList.remove("consent_manager-hidden"); var b = consent_managerBox.querySelectorAll("input[type=\"checkbox\"]"), c = b[0]; consent_managerBox.focus(), c && c.focus() } function consent_manager_hasconsent(a) { return "undefined" != typeof cmCookieAPI.get("consent_manager") && -1 !== JSON.parse(cmCookieAPI.get("consent_manager")).consents.indexOf(a) }