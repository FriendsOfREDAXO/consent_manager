const cmCookieExpires = 365, cmCookieAPI = Cookies.withAttributes({ expires: cmCookieExpires, path: "/", domain: consent_manager_parameters.domain, sameSite: "strict", secure: !0 }); !function () { "use strict"; var a, e, r, n = 0, c = {}, s = [], o = -1, t = -1; consent_manager_parameters.no_cookie_set = !1; if (void 0 === cmCookieAPI.get("consent_manager")) { cmCookieAPI.set("consent_manager_test", "test"); if (void 0 === cmCookieAPI.get("consent_manager_test")) { n = 0; consent_manager_parameters.no_cookie_set = !0; console.warn("Addon consent_manager: Es konnte kein Cookie für die Domain " + consent_manager_parameters.domain + " gesetzt werden!") } else { cmCookieAPI.remove("consent_manager_test"); n = 1 } } else if ((c = JSON.parse(cmCookieAPI.get("consent_manager"))).hasOwnProperty("version")) { s = c.consents; o = parseInt(c.version); t = parseInt(c.cachelogid) } if ("" === consent_manager_box_template) return console.warn("Addon consent_manager: Keine Cookie-Gruppen / Cookies ausgewählt bzw. keine Domain zugewiesen! (" + location.hostname + ")"); r = (r = (new DOMParser).parseFromString(consent_manager_box_template, "text/html")).getElementById("consent_manager-background"); document.querySelectorAll("body")[0].appendChild(r); a = parseInt(consent_manager_parameters.version); e = parseInt(consent_manager_parameters.cachelogid); if (a !== o || e !== t) { n = 1; s = []; m() } s.forEach(function (e) { d(r.querySelector('[data-uid="script-' + e + '"]')) }); (n = consent_manager_parameters.initially_hidden || consent_manager_parameters.no_cookie_set ? 0 : n) && g(); r.querySelectorAll(".consent_manager-close").forEach(function (e) { e.addEventListener("click", function () { if (e.classList.contains("consent_manager-save-selection")) { m(); i("selection") } else if (e.classList.contains("consent_manager-accept-all")) { m(); i("all") } else if (e.classList.contains("consent_manager-accept-none")) { m(); i("none") } else !e.classList.contains("consent_manager-close") || document.getElementById("consent_manager-detail").classList.contains("consent_manager-hidden") || document.getElementById("consent_manager-detail").classList.toggle("consent_manager-hidden"); consent_manager_parameters.hidebodyscrollbar && (document.querySelector("body").style.overflow = "auto"); document.getElementById("consent_manager-background").classList.add("consent_manager-hidden"); return !1 }) }); document.getElementById("consent_manager-toggle-details") && document.getElementById("consent_manager-toggle-details").addEventListener("click", function () { document.getElementById("consent_manager-detail").classList.toggle("consent_manager-hidden"); return !1 }); document.getElementById("consent_manager-toggle-details") && document.getElementById("consent_manager-toggle-details").addEventListener("keydown", function (e) { if ("Enter" == e.key) return document.getElementById("consent_manager-detail").classList.toggle("consent_manager-hidden"), !1 }); document.querySelectorAll(".consent_manager-show-box, .consent_manager-show-box-reload").forEach(function (e) { e.addEventListener("click", function () { g(); return !1 }) }); function i(o) { s = []; c = { consents: [], version: a, consentid: consent_manager_parameters.consentid, cachelogid: consent_manager_parameters.cachelogid }; "none" !== o ? r.querySelectorAll("[data-cookie-uids]").forEach(function (e) { var n = JSON.parse(e.getAttribute("data-cookie-uids")); e.checked || "all" === o ? n.forEach(function (e) { s.push(e); d(r.querySelector('[data-uid="script-' + e + '"]')) }) : n.forEach(function (e) { l(r.querySelector('[data-uid="script-' + e + '"]')) }) }) : r.querySelectorAll("[data-cookie-uids]").forEach(function (e) { var n = JSON.parse(e.getAttribute("data-cookie-uids")); if (e.disabled) n.forEach(function (e) { s.push(e); d(r.querySelector('[data-uid="script-' + e + '"]')) }); else { e.checked = !1; n.forEach(function (e) { l(r.querySelector('[data-uid="script-' + e + '"]')) }) } }); c.consents = s; cmCookieAPI.set("consent_manager", JSON.stringify(c)); if (void 0 === cmCookieAPI.get("consent_manager")) { consent_manager_parameters.no_cookie_set = !0; console.warn("Addon consent_manager: Es konnte kein Cookie für die Domain " + consent_manager_parameters.domain + " gesetzt werden!") } else { var n = new XMLHttpRequest, e = consent_manager_parameters.fe_controller + "?rex-api-call=consent_manager&buster=" + (new Date).getTime(), t = "domain=" + consent_manager_parameters.domain + "&consentid=" + consent_manager_parameters.consentid + "&buster=" + (new Date).getTime(); n.onerror = e => { console.error("Addon consent_manager: Fehler beim speichern des Consent! " + n.statusText) }; n.open("POST", e, !1); n.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); n.setRequestHeader("Cache-Control", "no-cache, no-store, max-age=0"); n.setRequestHeader("Expires", "Thu, 1 Jan 1970 00:00:00 GMT"); n.setRequestHeader("Pragma", "no-cache"); n.send(t) } document.querySelectorAll(".consent_manager-show-box-reload").length || 1 === consent_manager_parameters.forcereload ? location.reload() : document.dispatchEvent(new CustomEvent("consent_manager-saved", { detail: JSON.stringify(s) })) } function m() { var e, n = consent_manager_parameters.domain; for (e in cmCookieAPI.get()) { cmCookieAPI.remove(encodeURIComponent(e)); cmCookieAPI.remove(encodeURIComponent(e), { domain: n }); cmCookieAPI.remove(encodeURIComponent(e), { path: "/" }); cmCookieAPI.remove(encodeURIComponent(e), { domain: n, path: "/" }); cmCookieAPI.remove(encodeURIComponent(e), { domain: "." + n }); cmCookieAPI.remove(encodeURIComponent(e), { domain: "." + n, path: "/" }) } } function d(e) { if (e && !e.children.length) for (var n = (new DOMParser).parseFromString(window.atob(e.getAttribute("data-script")), "text/html"), o = 0; o < n.scripts.length; o++) { var t = document.createElement("script"); n.scripts[o].src ? t.src = n.scripts[o].src : t.innerHTML = n.scripts[o].innerHTML; e.appendChild(t) } } function l(e) { e && (e.innerHTML = "") } function g() { r.querySelectorAll("[data-cookie-uids]").forEach(function (e) { var n = !0; JSON.parse(e.getAttribute("data-cookie-uids")).forEach(function (e) { -1 === s.indexOf(e) && (n = !1) }); n && (e.checked = !0) }); consent_manager_parameters.hidebodyscrollbar && (document.querySelector("body").style.overflow = "hidden"); document.getElementById("consent_manager-background").classList.remove("consent_manager-hidden"); var e = r.querySelectorAll('input[type="checkbox"]')[0]; r.focus(); e && e.focus() } }(); function consent_manager_showBox() { var o = []; void 0 !== cmCookieAPI.get("consent_manager") && (cookieData = JSON.parse(cmCookieAPI.get("consent_manager"))).hasOwnProperty("version") && (o = cookieData.consents); (consent_managerBox = document.getElementById("consent_manager-background")).querySelectorAll("[data-cookie-uids]").forEach(function (e) { var n = !0; JSON.parse(e.getAttribute("data-cookie-uids")).forEach(function (e) { -1 === o.indexOf(e) && (n = !1) }); n && (e.checked = !0) }); consent_manager_parameters.hidebodyscrollbar && (document.querySelector("body").style.overflow = "hidden"); document.getElementById("consent_manager-background").classList.remove("consent_manager-hidden"); var e = consent_managerBox.querySelectorAll('input[type="checkbox"]')[0]; consent_managerBox.focus(); e && e.focus() } function consent_manager_hasconsent(e) { return void 0 !== cmCookieAPI.get("consent_manager") && -1 !== JSON.parse(cmCookieAPI.get("consent_manager")).consents.indexOf(e) }